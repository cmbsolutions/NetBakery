<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABo
        CQAAAk1TRnQBSQFMAgEBAgEAAVABAAFQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAxAEFQEcAyYBOQNOAZUBUAFeAWoB7QFZAWEBagHmAzoBYgMmATkDFgEe
        AxABFQwAAxkBIwMlATYDKgE/AVoCVwHCAV4BOwEwAfwDVgG2AzABSwMkATUDJAE1AyEBLwMdASkDFQEc
        AxUBHAMVARwDEAEVmAABXwJjAdoBSAGeAcEB/wGJAd0B8gH/AX0BywHiAf8BVwFmAWkB6AMrAUEDCwEO
        BAIQAAMKAQ0BYQJdAc8BdAFSAUEB/wFvAVABQAH/AXABUAE/Af8BVwJVAbQDEAEVrAADBgEHARUCFgEd
        ARoBbgGgAf8BiwHnAf0B/wExAcAB9gH/AVQBzwH+Af8BgQHSAecB/wFKAWoBeAHyAzYBWQMLAQ4MAAMH
        AQkBWgJYAb0BeAFXAUcB/wFaAlgBvQMuAUcBZgJgAeABcgFSAUIB/wFYAlYBswMFAQasAAMGAQcBGgFu
        AaAB/wGGAeYB/gH/ATEBwAH2Af8BMQHAAfYB/wFhAdkB/gH/AVMBqwHKAf8DTQGTAwUBBgwAAVkCVwG5
        AXwBXAFNAf8BWgJYAb0DCQELCAACYgFgAeEBdAFVAUUB/wFXAlYBsgMFAQaoAAMGAQcBGgFuAaAB/wGH
        AekB/gH/ATEBwAH2Af8BMQHAAfYB/wGJAeEB8wH/AToBYwF9AfYDIAEuBAEMAAFoAVkBUwH0AXwBXgFQ
        Af8DMQFNBAADMAFKAVwCWQHGBAACYgFgAeEBdwFXAUgB/wNJAYioAAMGAQcBGgFuAaAB/wGIAesB/gH/
        ATEBwAH2Af8BgwHoAf0B/wE0AYgBsQH/AkIBQwF1AwYBCBAAAz8BbAF8AWABUQH/AWUCXgHiBAABWgJY
        Ab0BgAFhAVEB/wFjAWIBYQHhBAABZQJeAeIDTAGQqAADBgEHARoBbgGgAf8BiQHtAf4B/wExAcAB9gH/
        AX8B6gH+Af8BQAGXAbsB/wNIAYQDDgESAwQBBQQBDAADRgF9AX4BYgFUAf8BZQJeAeIEAAFjAl0B3wGD
        AWMBVAH/AmIBYQHhBAADDAEQA0kBiANEAXsDAwEEmAADEgEXAUMCRAF3ARoBbgGgAf8BiQHvAf4B/wEx
        AcAB9gH/ATEBwAH2Af8BiwHnAfQB/wFAAW4BfwH1A0kBiAMjATMDCgENAwIBAwwAA0cCgQFlAVcB/wFk
        AmIB4QQAAWYCYAHgAYUBZwFYAf8CYgFhAeEEAAFlAWABXgHjAX4BXwFRAf8BVgJUAasDAgEDkAADJwE5
        AVIBagFyAe0BTwGoAcYB/wFqAc4B4QH/AX8B7wH+Af8BMQHAAfYB/wExAcAB9gH/ATEBwAH2Af8BiAHg
        Ae4B/wFTAa0BygH/AT0BbwGHAfcDMwFQAwkBDBAAA0gBhAGFAWkBWwH/AWMBYgFhAeEEAAFmAmAB4AGJ
        AWoBWgH/AmIBYQHhBAABZQFgAV8B4wGAAWMBUwH/AVUCUwGqAwIBA4wAAVkCXAG+AWgBygHdAf8BegHv
        Af4B/wExAcAB9gH/ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/ATEBwAH2Af8BMQHAAfYB/wF4Ae8B/gH/
        AWcByQHdAf8BWQFbAVwBwQMOARIEAhAAAzwBZgNBAXADDAEPBAACYgFhAeEBigFsAV4B/wFmAmAB4AQA
        AWMCWwHkAYMBZQFWAf8DTAGQBAKIAAE2AWMBewH2AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9
        Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AYsB7AH3Af8BUgFnAWoB6gMP
        ARQEAhgAA0kBhQFlAl4B4gQAAWMCYgHhAYwBbwFfAf8CUQFQAZ0EAAFjAV0BWwHkAYUBZwFZAf8DSQGG
        hAADBgEIARoBbwGgAf8BigHyAf4B/wF2AdgB/QH/AXYB2AH9Af8BbgHSAeQB/wEyAYcBsAH/ATIBiAGw
        Af8BbgHSAeQB/wF2AdgB/QH/AXYB2AH9Af8BiwHuAfkB/wFLAWUBdgHxAw8BFAQCGAADSQGFAY0BcQFj
        Af8BZAJiAeEEAANSAaMDGAEgBAADNgFYAYYBagFbAf8BdwJcAfiEAAMGAQgBGgFvAaAB/wGKAfIB/gH/
        AXYB2AH9Af8BdgHYAf0B/wEpAX4BqQH/A0UBfANEAXgBJgF7AacB/wF2AdgB/QH/AXYB2AH9Af8BiwHt
        AfkB/wFMAWcBcQHvAw4BEgQCGAADBQEGAlcBVgGyAY4BcgFkAf8BYwJiAeEIAAMWAR4BZQJeAd0BigFu
        AWAB/wNVAayIAAE/AWoBfAH1AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/AWcByAHdAf8BLAGAAZEB/gEs
        AYABkgH+AWcByAHdAf8BdgHYAf0B/wF2AdgB/QH/AXQB4gHxAf8BWgJjAd8DCQEMBAEcAAMFAQYDVgGw
        AY8BdAFmAf8BZgJgAeADMQFOAWEBXAFbAd4BjQFxAWMB/wFaAlgBtwMGAQiIAANVAa0BTwGoAcYB/wFy
        Ad0B7QH/AZsB7wH5Af8BogHyAfoB/wGnAfQB+gH/AacB9AH6Af8BogHyAfoB/wGbAe8B+QH/AXAB2gHr
        Af8BRgGeAb8B/wFOAk8BlwMCAQMkAAMEAQUCVgFVAa4BjwF0AWcB/wGLAXEBYwH/AY8BdAFmAf8BWgJY
        AbcDBgEIjAADDQERA00BkgFcAV4BXwHSAVkBZgFsAeUBUgFqAXEB7QFKAWoBeQHyAUoBagF5AfIBVgFq
        AXEB6wFZAWYBbAHlA10BzANJAYUDCQELLAADAwEEAk8BTgGXAW4CWgH1AlQBUgGoAwYBB4gAAUIBTQE+
        BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHgAQcBAAEBBAAB+AEHAYAB/wQAAeABBwEA
        AX8EAAHwAQcBDAE/BAAB8AEHARIBPwQAAfABDwERAT8EAAHwAQMBiAGHBAAB4AEBAcQBQwQAAcABAQHi
        ASEEAAHAAQAB8QEQBAABwAEAAfwBiAQAAYABAAH8AUgEAAGAAQAB/AEwBAABwAEAAf4FAAHAAQEB/wEB
        BAABwAEDAf8BgwQACw==
</value>
  </data>
</root>
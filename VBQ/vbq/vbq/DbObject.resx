<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACm
        CQAAAk1TRnQBSQFMAgEBAgEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAxAEFQEcAyYBOQNOAZUBOwFcAW8B7QFIAVoBagHmAzoBYgMmATkDFgEe
        AxABFQwAAxkBIwMlATYDKgE/AVoCVwHCAV4BQAE1AfwDVgG2AzABSwMkATUDJAE1AyEBLwMdASkDFQEc
        AxUBHAMVARwDEAEVmAABUwFjAW0B2gFIAZ4BwQH/AYkB3QHyAf8BfQHLAeIB/wFFAWYBdgHoAysBQQML
        AQ4EAhAAAwoBDQFhAV0BWwHPAXQBUgFBAf8BbwFQAUAB/wFwAVABPwH/AVcCVQG0AxABFawAAwYBBwEV
        AhYBHQEaAW4BoAH/AYsB5wH9Af8BMQHAAfYB/wFUAc8B/gH/AYEB0gHnAf8BNwFqAYUB8gM2AVkDCwEO
        DAADBwEJAVoCWAG9AXgBVwFHAf8BWgJYAb0DLgFHAWYBXQFaAeABcgFSAUIB/wFYAlYBswMFAQasAAMG
        AQcBGgFuAaAB/wGGAeYB/gH/ATEBwAH2Af8BMQHAAfYB/wFhAdkB/gH/AVMBqwHKAf8DTQGTAwUBBgwA
        AVkCVwG5AXwBXAFNAf8BWgJYAb0DCQELCAABZQFdAVkB4QF0AVUBRQH/AVcCVgGyAwUBBqgAAwYBBwEa
        AW4BoAH/AYcB6QH+Af8BMQHAAfYB/wExAcAB9gH/AYkB4QHzAf8BMAFnAY4B9gMgAS4EAQwAAWoBWQFT
        AfQBfAFeAVAB/wMxAU0EAAMwAUoBXQJZAcYEAAFmAV4BWgHhAXcBVwFIAf8DSQGIqAADBgEHARoBbgGg
        Af8BiAHrAf4B/wExAcAB9gH/AYMB6AH9Af8BNAGIAbEB/wJCAUMBdQMGAQgQAAM/AWwBfAFgAVEB/wFn
        AV4BWwHiBAABWgJYAb0BgAFhAVEB/wFoAV8BXAHhBAABZQFeAVkB4gNMAZCoAAMGAQcBGgFuAaAB/wGJ
        Ae0B/gH/ATEBwAH2Af8BfwHqAf4B/wFAAZcBuwH/A0gBhAMOARIDBAEFBAEMAANGAX0BfgFiAVQB/wFn
        AV4BXAHiBAABYwFdAVgB3wGDAWMBVAH/AWcBXwFcAeEEAAMMARADSQGIA0QBewMDAQSYAAMSARcBQwJE
        AXcBGgFuAaAB/wGJAe8B/gH/ATEBwAH2Af8BMQHAAfYB/wGLAecB9AH/ATABbgGJAfUDSQGIAyMBMwMK
        AQ0DAgEDDAADRwKBAWUBVwH/AWkBYgFdAeEEAAFmAWABWwHgAYUBZwFYAf8BZwFfAVwB4QQAAWUBXQFZ
        AeMBfgFfAVEB/wFWAlQBqwMCAQOQAAMnATkBQAFqAYAB7QFPAagBxgH/AWoBzgHhAf8BfwHvAf4B/wEx
        AcAB9gH/ATEBwAH2Af8BMQHAAfYB/wGIAeAB7gH/AVMBrQHKAf8BMwFvAY0B9wMzAVADCQEMEAADSAGE
        AYUBaQFbAf8BaAFgAVwB4QQAAWYBYAFbAeABiQFqAVoB/wFnAV8BXAHhBAABZgFfAVoB4wGAAWMBUwH/
        AVUCUwGqAwIBA4wAAVYBXAFeAb4BaAHKAd0B/wF6Ae8B/gH/ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/
        ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/AXgB7wH+Af8BZwHJAd0B/wFWAVsBXAHBAw4BEgQCEAADPAFm
        A0EBcAMMAQ8EAAFnAWABXAHhAYoBbAFeAf8BZgFgAV0B4AQAAWgCWwHkAYMBZQFWAf8DTAGQBAKIAAEs
        AWMBjAH2AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9
        Af8BdgHYAf0B/wF2AdgB/QH/AYsB7AH3Af8BPwFnAXkB6gMPARQEAhgAA0kBhQFnAV4BXQHiBAABaAFg
        AV0B4QGMAW8BXwH/AlEBUAGdBAABaQFdAVsB5AGFAWcBWQH/A0kBhoQAAwYBCAEaAW8BoAH/AYoB8gH+
        Af8BdgHYAf0B/wF2AdgB/QH/AW4B0gHkAf8BMgGHAbAB/wEyAYgBsAH/AW4B0gHkAf8BdgHYAf0B/wF2
        AdgB/QH/AYsB7gH5Af8BOAFlAYQB8QMPARQEAhgAA0kBhQGNAXEBYwH/AWkBYgFdAeEEAANSAaMDGAEg
        BAADNgFYAYYBagFbAf8BdwFcAVoB+IQAAwYBCAEaAW8BoAH/AYoB8gH+Af8BdgHYAf0B/wF2AdgB/QH/
        ASkBfgGpAf8DRQF8A0QBeAEmAXsBpwH/AXYB2AH9Af8BdgHYAf0B/wGLAe0B+QH/AToBZwF/Ae8DDgES
        BAIYAAMFAQYCVwFWAbIBjgFyAWQB/wFoAWIBXQHhCAADFgEeAWUBXgFaAd0BigFuAWAB/wNVAayIAAEu
        AWoBhwH1AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/AWcByAHdAf8BJwF7AZsB/gEnAXwBnAH+AWcByAHd
        Af8BdgHYAf0B/wF2AdgB/QH/AXQB4gHxAf8BSgFjAW8B3wMJAQwEARwAAwUBBgNWAbABjwF0AWYB/wFn
        AWABXQHgAzEBTgFmAVwBWwHeAY0BcQFjAf8BWgJYAbcDBgEIiAABVAFVAVcBrQFPAagBxgH/AXIB3QHt
        Af8BmwHvAfkB/wGiAfIB+gH/AacB9AH6Af8BpwH0AfoB/wGiAfIB+gH/AZsB7wH5Af8BcAHaAesB/wFG
        AZ4BvwH/AU4CTwGXAwIBAyQAAwQBBQJWAVUBrgGPAXQBZwH/AYsBcQFjAf8BjwF0AWYB/wFaAlgBtwMG
        AQiMAAMNAREDTQGSAVIBYAFoAdIBRwFmAXcB5QE/AWoBfwHtATcBagGIAfIBNwFqAYgB8gFBAWoBfQHr
        AUcBZgF3AeUBVQFeAWUBzANJAYUDCQELLAADAwEEAk8BTgGXAXABXwFaAfUCVAFSAagDBgEHiAABQgFN
        AT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAeABBwEAAQEEAAH4AQcBgAH/BAAB4AEH
        AQABfwQAAfABBwEMAT8EAAHwAQcBEgE/BAAB8AEPAREBPwQAAfABAwGIAYcEAAHgAQEBxAFDBAABwAEB
        AeIBIQQAAcABAAHxARAEAAHAAQAB/AGIBAABgAEAAfwBSAQAAYABAAH8ATAEAAHAAQAB/gUAAcABAQH/
        AQEEAAHAAQMB/wGDBAAL
</value>
  </data>
</root>
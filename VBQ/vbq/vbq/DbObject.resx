<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACa
        CQAAAk1TRnQBSQFMAgEBAgEAATABAAEwAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAxAEFQEcAyYBOQNOAZUBQQFeAW0B7QFOAVsBagHmAzoBYgMmATkDFgEe
        AxABFQwAAxkBIwMlATYDKgE/AVoCVwHCAV4BPwE0AfwDVgG2AzABSwMkATUDJAE1AyEBLwMdASkDFQEc
        AxUBHAMVARwDEAEVmAABVwFjAWkB2gFIAZ4BwQH/AYkB3QHyAf8BfQHLAeIB/wFLAWYBcgHoAysBQQML
        AQ4EAhAAAwoBDQFhAl0BzwF0AVIBQQH/AW8BUAFAAf8BcAFQAT8B/wFXAlUBtAMQARWsAAMGAQcBFQIW
        AR0BGgFuAaAB/wGLAecB/QH/ATEBwAH2Af8BVAHPAf4B/wGBAdIB5wH/ATsBagGBAfIDNgFZAwsBDgwA
        AwcBCQFaAlgBvQF4AVcBRwH/AVoCWAG9Ay4BRwFmAV8BWwHgAXIBUgFCAf8BWAJWAbMDBQEGrAADBgEH
        ARoBbgGgAf8BhgHmAf4B/wExAcAB9gH/ATEBwAH2Af8BYQHZAf4B/wFTAasBygH/A00BkwMFAQYMAAFZ
        AlcBuQF8AVwBTQH/AVoCWAG9AwkBCwgAAWQBXgFcAeEBdAFVAUUB/wFXAlYBsgMFAQaoAAMGAQcBGgFu
        AaAB/wGHAekB/gH/ATEBwAH2Af8BMQHAAfYB/wGJAeEB8wH/ATIBZQGLAfYDIAEuBAEMAAFoAVkBUwH0
        AXwBXgFQAf8DMQFNBAADMAFKAVwCWQHGBAABZQFfAVwB4QF3AVcBSAH/A0kBiKgAAwYBBwEaAW4BoAH/
        AYgB6wH+Af8BMQHAAfYB/wGDAegB/QH/ATQBiAGxAf8CQgFDAXUDBgEIEAADPwFsAXwBYAFRAf8BZQFe
        AV0B4gQAAVoCWAG9AYABYQFRAf8BZwFgAV0B4QQAAWUBXgFbAeIDTAGQqAADBgEHARoBbgGgAf8BiQHt
        Af4B/wExAcAB9gH/AX8B6gH+Af8BQAGXAbsB/wNIAYQDDgESAwQBBQQBDAADRgF9AX4BYgFUAf8BZQJe
        AeIEAAFjAV0BWgHfAYMBYwFUAf8BZgFgAV0B4QQAAwwBEANJAYgDRAF7AwMBBJgAAxIBFwFDAkQBdwEa
        AW4BoAH/AYkB7wH+Af8BMQHAAfYB/wExAcAB9gH/AYsB5wH0Af8BMwFuAYcB9QNJAYgDIwEzAwoBDQMC
        AQMMAANHAoEBZQFXAf8BaAFiAV4B4QQAAWYBYAFdAeABhQFnAVgB/wFmAWABXQHhBAABZQFeAVoB4wF+
        AV8BUQH/AVYCVAGrAwIBA5AAAycBOQFFAWoBfQHtAU8BqAHGAf8BagHOAeEB/wF/Ae8B/gH/ATEBwAH2
        Af8BMQHAAfYB/wExAcAB9gH/AYgB4AHuAf8BUwGtAcoB/wE1AW8BiwH3AzMBUAMJAQwQAANIAYQBhQFp
        AVsB/wFnAWEBXQHhBAABZgFgAV0B4AGJAWoBWgH/AWYBYAFdAeEEAAFlAWABWwHjAYABYwFTAf8BVQJT
        AaoDAgEDjAABVwJcAb4BaAHKAd0B/wF6Ae8B/gH/ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/ATEBwAH2
        Af8BMQHAAfYB/wExAcAB9gH/AXgB7wH+Af8BZwHJAd0B/wFXAVsBXAHBAw4BEgQCEAADPAFmA0EBcAMM
        AQ8EAAFmAWEBXQHhAYoBbAFeAf8BZgFgAV8B4AQAAWcCWwHkAYMBZQFWAf8DTAGQBAKIAAEuAWMBiAH2
        AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHY
        Af0B/wF2AdgB/QH/AYsB7AH3Af8BRQFnAXUB6gMPARQEAhgAA0kBhQFlAl4B4gQAAWcBYQFeAeEBjAFv
        AV8B/wJRAVABnQQAAWgBXQFbAeQBhQFnAVkB/wNJAYaEAAMGAQgBGgFvAaAB/wGKAfIB/gH/AXYB2AH9
        Af8BdgHYAf0B/wFuAdIB5AH/ATIBhwGwAf8BMgGIAbAB/wFuAdIB5AH/AXYB2AH9Af8BdgHYAf0B/wGL
        Ae4B+QH/AT0BZQGBAfEDDwEUBAIYAANJAYUBjQFxAWMB/wFoAWIBXgHhBAADUgGjAxgBIAQAAzYBWAGG
        AWoBWwH/AXcBXAFbAfiEAAMGAQgBGgFvAaAB/wGKAfIB/gH/AXYB2AH9Af8BdgHYAf0B/wEpAX4BqQH/
        A0UBfANEAXgBJgF7AacB/wF2AdgB/QH/AXYB2AH9Af8BiwHtAfkB/wE+AWcBewHvAw4BEgQCGAADBQEG
        AlcBVgGyAY4BcgFkAf8BZwFiAV4B4QgAAxYBHgFlAV4BWwHdAYoBbgFgAf8DVQGsiAABMQFqAYUB9QGM
        AfAB+wH/AXYB2AH9Af8BdgHYAf0B/wFnAcgB3QH/ASgBfAGZAf4BKAF9AZoB/gFnAcgB3QH/AXYB2AH9
        Af8BdgHYAf0B/wF0AeIB8QH/AVABYwFrAd8DCQEMBAEcAAMFAQYDVgGwAY8BdAFmAf8BZgFgAV8B4AMx
        AU4BZQFcAVsB3gGNAXEBYwH/AVoCWAG3AwYBCIgAA1UBrQFPAagBxgH/AXIB3QHtAf8BmwHvAfkB/wGi
        AfIB+gH/AacB9AH6Af8BpwH0AfoB/wGiAfIB+gH/AZsB7wH5Af8BcAHaAesB/wFGAZ4BvwH/AU4CTwGX
        AwIBAyQAAwQBBQJWAVUBrgGPAXQBZwH/AYsBcQFjAf8BjwF0AWYB/wFaAlgBtwMGAQiMAAMNAREDTQGS
        AVYBXwFlAdIBTQFmAXQB5QFFAWoBewHtATsBagGEAfIBOwFqAYQB8gFHAWoBeQHrAU0BZgF0AeUBWAFd
        AWIBzANJAYUDCQELLAADAwEEAk8BTgGXAW8BXgFaAfUCVAFSAagDBgEHiAABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAeABBwEAAQEEAAH4AQcBgAH/BAAB4AEHAQABfwQAAfABBwEM
        AT8EAAHwAQcBEgE/BAAB8AEPAREBPwQAAfABAwGIAYcEAAHgAQEBxAFDBAABwAEBAeIBIQQAAcABAAHx
        ARAEAAHAAQAB/AGIBAABgAEAAfwBSAQAAYABAAH8ATAEAAHAAQAB/gUAAcABAQH/AQEEAAHAAQMB/wGD
        BAAL
</value>
  </data>
</root>
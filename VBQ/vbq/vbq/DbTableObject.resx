<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABC
        CQAAAk1TRnQBSQFMAgEBAgEAAWgBAAFoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAxAEFQEcAyYBOQNOAZUBVgFeAWoB7QFcAWEBagHmAzoBYgMmATkDFgEe
        AxABFQwAAxkBIwMlATYDKgE/AVoCVwHCAV4BOAEtAfwDVgG2AzABSwMkATUDJAE1AyEBLwMdASkDFQEc
        AxUBHAMVARwDEAEVmAABXwJjAdoBSAGeAcEB/wGJAd0B8gH/AX0BywHiAf8BWwFmAWkB6AMrAUEDCwEO
        BAIQAAMKAQ0BYQJdAc8BdAFSAUEB/wFvAVABQAH/AXABUAE/Af8BVwJVAbQDEAEVrAADBgEHARUCFgEd
        ARoBbgGgAf8BiwHnAf0B/wExAcAB9gH/AVQBzwH+Af8BgQHSAecB/wFQAWoBdQHyAzYBWQMLAQ4MAAMH
        AQkBWgJYAb0BeAFXAUcB/wFaAlgBvQMuAUcBZgJgAeABcgFSAUIB/wFYAlYBswMFAQasAAMGAQcBGgFu
        AaAB/wGGAeYB/gH/ATEBwAH2Af8BMQHAAfYB/wFhAdkB/gH/AVMBqwHKAf8DTQGTAwUBBgwAAVkCVwG5
        AXwBXAFNAf8BWgJYAb0DCQELCAADYgHhAXQBVQFFAf8BVwJWAbIDBQEGqAADBgEHARoBbgGgAf8BhwHp
        Af4B/wExAcAB9gH/ATEBwAH2Af8BiQHhAfMB/wFDAWMBeQH2AyABLgQBDAABaAFZAVMB9AF8AV4BUAH/
        AzEBTQQAAzABSgFcAlkBxgQAA2IB4QF3AVcBSAH/A0kBiKgAAwYBBwEaAW4BoAH/AYgB6wH+Af8BMQHA
        AfYB/wGDAegB/QH/ATQBiAGxAf8CQgFDAXUDBgEIEAADPwFsAXwBYAFRAf8BZQJeAeIEAAFaAlgBvQGA
        AWEBUQH/A2IB4QQAAWUCXgHiA0wBkKgAAwYBBwEaAW4BoAH/AYkB7QH+Af8BMQHAAfYB/wF/AeoB/gH/
        AUABlwG7Af8DSAGEAw4BEgMEAQUEAQwAA0YBfQF+AWIBVAH/AWUCXgHiBAABYwJdAd8BgwFjAVQB/wNi
        AeEEAAMMARADSQGIA0QBewMDAQSYAAMSARcBQwJEAXcBGgFuAaAB/wGJAe8B/gH/ATEBwAH2Af8BMQHA
        AfYB/wGLAecB9AH/AUQBbgF2AfUDSQGIAyMBMwMKAQ0DAgEDDAADRwKBAWUBVwH/A2IB4QQAAWYCYAHg
        AYUBZwFYAf8DYgHhBAABZQJgAeMBfgFfAVEB/wFWAlQBqwMCAQOQAAMnATkBWAFqAWwB7QFPAagBxgH/
        AWoBzgHhAf8BfwHvAf4B/wExAcAB9gH/ATEBwAH2Af8BMQHAAfYB/wGIAeAB7gH/AVMBrQHKAf8BRAFv
        AYQB9wMzAVADCQEMEAADSAGEAYUBaQFbAf8DYgHhBAABZgJgAeABiQFqAVoB/wNiAeEEAAFlAmAB4wGA
        AWMBUwH/AVUCUwGqAwIBA4wAAVkCXAG+AWgBygHdAf8BegHvAf4B/wExAcAB9gH/ATEBwAH2Af8BMQHA
        AfYB/wExAcAB9gH/ATEBwAH2Af8BMQHAAfYB/wF4Ae8B/gH/AWcByQHdAf8BWQFbAVwBwQMOARIEAhAA
        AzwBZgNBAXADDAEPBAADYgHhAYoBbAFeAf8BZgJgAeAEAAFjAlsB5AGDAWUBVgH/A0wBkAQCiAABPQFj
        AXgB9gGMAfAB+wH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/
        AXYB2AH9Af8BdgHYAf0B/wGLAewB9wH/AVYCZwHqAw8BFAQCGAADSQGFAWUCXgHiBAADYgHhAYwBbwFf
        Af8CUQFQAZ0EAAFjAV0BWwHkAYUBZwFZAf8DSQGGhAADBgEIARoBbwGgAf8BigHyAf4B/wF2AdgB/QH/
        AXYB2AH9Af8BbgHSAeQB/wEyAYcBsAH/ATIBiAGwAf8BbgHSAeQB/wF2AdgB/QH/AXYB2AH9Af8BiwHu
        AfkB/wFUAWUBcwHxAw8BFAQCGAADSQGFAY0BcQFjAf8DYgHhBAADUgGjAxgBIAQAAzYBWAGGAWoBWwH/
        AXcCXAH4hAADBgEIARoBbwGgAf8BigHyAf4B/wF2AdgB/QH/AXYB2AH9Af8BKQF+AakB/wNFAXwDRAF4
        ASYBewGnAf8BdgHYAf0B/wF2AdgB/QH/AYsB7QH5Af8BUgFnAW0B7wMOARIEAhgAAwUBBgJXAVYBsgGO
        AXIBZAH/A2IB4QgAAxYBHgFlAl4B3QGKAW4BYAH/A1UBrIgAAUQBagFzAfUBjAHwAfsB/wF2AdgB/QH/
        AXYB2AH9Af8BZwHIAd0B/wEvAYABiwH+AS8BgAGMAf4BZwHIAd0B/wF2AdgB/QH/AXYB2AH9Af8BdAHi
        AfEB/wFdAmMB3wMJAQwEARwAAwUBBgNWAbABjwF0AWYB/wFmAmAB4AMxAU4BYQFcAVsB3gGNAXEBYwH/
        AVoCWAG3AwYBCIgAA1UBrQFPAagBxgH/AXIB3QHtAf8BmwHvAfkB/wGiAfIB+gH/AacB9AH6Af8BpwH0
        AfoB/wGiAfIB+gH/AZsB7wH5Af8BcAHaAesB/wFGAZ4BvwH/AU4CTwGXAwIBAyQAAwQBBQJWAVUBrgGP
        AXQBZwH/AYsBcQFjAf8BjwF0AWYB/wFaAlgBtwMGAQiMAAMNAREDTQGSA14B0gFfAWYBZwHlAVgBagFr
        Ae0BUAFqAXYB8gFQAWoBdgHyAVoBagFsAesBXwFmAWcB5QNdAcwDSQGFAwkBCywAAwMBBAJPAU4BlwFu
        AloB9QJUAVIBqAMGAQeIAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB4AEH
        AQABAQQAAfgBBwGAAf8EAAHgAQcBAAF/BAAB8AEHAQwBPwQAAfABBwESAT8EAAHwAQ8BEQE/BAAB8AED
        AYgBhwQAAeABAQHEAUMEAAHAAQEB4gEhBAABwAEAAfEBEAQAAcABAAH8AYgEAAGAAQAB/AFIBAABgAEA
        AfwBMAQAAcABAAH+BQABwAEBAf8BAQQAAcABAwH/AYMEAAs=
</value>
  </data>
</root>
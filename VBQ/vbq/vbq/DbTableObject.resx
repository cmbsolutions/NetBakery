<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA0
        CQAAAk1TRnQBSQFMAgEBAgEAAYgBAAGIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAxAEFQEcAyYBOQNOAZUCXgFqAe0CYQFqAeYDOgFiAyYBOQMWAR4DEAEV
        DAADGQEjAyUBNgMqAT8BWgJXAcIBXgE0ASsB/ANWAbYDMAFLAyQBNQMkATUDIQEvAx0BKQMVARwDFQEc
        AxUBHAMQARWYAAFfAmMB2gFIAZ4BwQH/AYkB3QHyAf8BfQHLAeIB/wFgAWYBaQHoAysBQQMLAQ4EAhAA
        AwoBDQFhAl0BzwF0AVIBQQH/AW8BUAFAAf8BcAFQAT8B/wFXAlUBtAMQARWsAAMGAQcBFQIWAR0BGgFu
        AaAB/wGLAecB/QH/ATEBwAH2Af8BVAHPAf4B/wGBAdIB5wH/AVkBagFtAfIDNgFZAwsBDgwAAwcBCQFa
        AlgBvQF4AVcBRwH/AVoCWAG9Ay4BRwFmAmAB4AFyAVIBQgH/AVgCVgGzAwUBBqwAAwYBBwEaAW4BoAH/
        AYYB5gH+Af8BMQHAAfYB/wExAcAB9gH/AWEB2QH+Af8BUwGrAcoB/wNNAZMDBQEGDAABWQJXAbkBfAFc
        AU0B/wFaAlgBvQMJAQsIAANiAeEBdAFVAUUB/wFXAlYBsgMFAQaoAAMGAQcBGgFuAaAB/wGHAekB/gH/
        ATEBwAH2Af8BMQHAAfYB/wGJAeEB8wH/AUgBYwF1AfYDIAEuBAEMAAFoAVkBUwH0AXwBXgFQAf8DMQFN
        BAADMAFKAVwCWQHGBAADYgHhAXcBVwFIAf8DSQGIqAADBgEHARoBbgGgAf8BiAHrAf4B/wExAcAB9gH/
        AYMB6AH9Af8BNAGIAbEB/wJCAUMBdQMGAQgQAAM/AWwBfAFgAVEB/wFlAl4B4gQAAVoCWAG9AYABYQFR
        Af8DYgHhBAABZQJeAeIDTAGQqAADBgEHARoBbgGgAf8BiQHtAf4B/wExAcAB9gH/AX8B6gH+Af8BQAGX
        AbsB/wNIAYQDDgESAwQBBQQBDAADRgF9AX4BYgFUAf8BZQJeAeIEAAFjAl0B3wGDAWMBVAH/A2IB4QQA
        AwwBEANJAYgDRAF7AwMBBJgAAxIBFwFDAkQBdwEaAW4BoAH/AYkB7wH+Af8BMQHAAfYB/wExAcAB9gH/
        AYsB5wH0Af8BSAFuAW8B9QNJAYgDIwEzAwoBDQMCAQMMAANHAoEBZQFXAf8DYgHhBAABZgJgAeABhQFn
        AVgB/wNiAeEEAAFlAmAB4wF+AV8BUQH/AVYCVAGrAwIBA5AAAycBOQFeAmoB7QFPAagBxgH/AWoBzgHh
        Af8BfwHvAf4B/wExAcAB9gH/ATEBwAH2Af8BMQHAAfYB/wGIAeAB7gH/AVMBrQHKAf8BTwFvAYAB9wMz
        AVADCQEMEAADSAGEAYUBaQFbAf8DYgHhBAABZgJgAeABiQFqAVoB/wNiAeEEAAFlAmAB4wGAAWMBUwH/
        AVUCUwGqAwIBA4wAAVkCXAG+AWgBygHdAf8BegHvAf4B/wExAcAB9gH/ATEBwAH2Af8BMQHAAfYB/wEx
        AcAB9gH/ATEBwAH2Af8BMQHAAfYB/wF4Ae8B/gH/AWcByQHdAf8BWQFbAVwBwQMOARIEAhAAAzwBZgNB
        AXADDAEPBAADYgHhAYoBbAFeAf8BZgJgAeAEAAFjAlsB5AGDAWUBVgH/A0wBkAQCiAABRwFjAXQB9gGM
        AfAB+wH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9
        Af8BdgHYAf0B/wGLAewB9wH/AV0CZwHqAw8BFAQCGAADSQGFAWUCXgHiBAADYgHhAYwBbwFfAf8CUQFQ
        AZ0EAAFjAV0BWwHkAYUBZwFZAf8DSQGGhAADBgEIARoBbwGgAf8BigHyAf4B/wF2AdgB/QH/AXYB2AH9
        Af8BbgHSAeQB/wEyAYcBsAH/ATIBiAGwAf8BbgHSAeQB/wF2AdgB/QH/AXYB2AH9Af8BiwHuAfkB/wFY
        AWUBcAHxAw8BFAQCGAADSQGFAY0BcQFjAf8DYgHhBAADUgGjAxgBIAQAAzYBWAGGAWoBWwH/AXcCXAH4
        hAADBgEIARoBbwGgAf8BigHyAf4B/wF2AdgB/QH/AXYB2AH9Af8BKQF+AakB/wNFAXwDRAF4ASYBewGn
        Af8BdgHYAf0B/wF2AdgB/QH/AYsB7QH5Af8BWQJnAe8DDgESBAIYAAMFAQYCVwFWAbIBjgFyAWQB/wNi
        AeEIAAMWAR4BZQJeAd0BigFuAWAB/wNVAayIAAFIAWoBbgH1AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/
        AWcByAHdAf8BMwGAAYMB/gEzAYABhAH+AWcByAHdAf8BdgHYAf0B/wF2AdgB/QH/AXQB4gHxAf8BXQJj
        Ad8DCQEMBAEcAAMFAQYDVgGwAY8BdAFmAf8BZgJgAeADMQFOAWEBXAFbAd4BjQFxAWMB/wFaAlgBtwMG
        AQiIAANVAa0BTwGoAcYB/wFyAd0B7QH/AZsB7wH5Af8BogHyAfoB/wGnAfQB+gH/AacB9AH6Af8BogHy
        AfoB/wGbAe8B+QH/AXAB2gHrAf8BRgGeAb8B/wFOAk8BlwMCAQMkAAMEAQUCVgFVAa4BjwF0AWcB/wGL
        AXEBYwH/AY8BdAFmAf8BWgJYAbcDBgEIjAADDQERA00BkgNeAdIBXwJmAeUBXgJqAe0BWQFqAW8B8gFZ
        AWoBbwHyAWEBagFsAesBXwJmAeUDXQHMA0kBhQMJAQssAAMDAQQCTwFOAZcBbgJaAfUCVAFSAagDBgEH
        iAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAeABBwEAAQEEAAH4AQcBgAH/
        BAAB4AEHAQABfwQAAfABBwEMAT8EAAHwAQcBEgE/BAAB8AEPAREBPwQAAfABAwGIAYcEAAHgAQEBxAFD
        BAABwAEBAeIBIQQAAcABAAHxARAEAAHAAQAB/AGIBAABgAEAAfwBSAQAAYABAAH8ATAEAAHAAQAB/gUA
        AcABAQH/AQEEAAHAAQMB/wGDBAAL
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA2
        CQAAAk1TRnQBSQFMAgEBAgEAAYABAAGAAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAxAEFQEcAyYBOQNOAZUBXAFeAWoB7QJhAWoB5gM6AWIDJgE5AxYBHgMQ
        ARUMAAMZASMDJQE2AyoBPwFaAlcBwgFeATUBKwH8A1YBtgMwAUsDJAE1AyQBNQMhAS8DHQEpAxUBHAMV
        ARwDFQEcAxABFZgAAV8CYwHaAUgBngHBAf8BiQHdAfIB/wF9AcsB4gH/AWABZgFpAegDKwFBAwsBDgQC
        EAADCgENAWECXQHPAXQBUgFBAf8BbwFQAUAB/wFwAVABPwH/AVcCVQG0AxABFawAAwYBBwEVAhYBHQEa
        AW4BoAH/AYsB5wH9Af8BMQHAAfYB/wFUAc8B/gH/AYEB0gHnAf8BVwFqAW8B8gM2AVkDCwEODAADBwEJ
        AVoCWAG9AXgBVwFHAf8BWgJYAb0DLgFHAWYCYAHgAXIBUgFCAf8BWAJWAbMDBQEGrAADBgEHARoBbgGg
        Af8BhgHmAf4B/wExAcAB9gH/ATEBwAH2Af8BYQHZAf4B/wFTAasBygH/A00BkwMFAQYMAAFZAlcBuQF8
        AVwBTQH/AVoCWAG9AwkBCwgAA2IB4QF0AVUBRQH/AVcCVgGyAwUBBqgAAwYBBwEaAW4BoAH/AYcB6QH+
        Af8BMQHAAfYB/wExAcAB9gH/AYkB4QHzAf8BSAFjAXYB9gMgAS4EAQwAAWgBWQFTAfQBfAFeAVAB/wMx
        AU0EAAMwAUoBXAJZAcYEAANiAeEBdwFXAUgB/wNJAYioAAMGAQcBGgFuAaAB/wGIAesB/gH/ATEBwAH2
        Af8BgwHoAf0B/wE0AYgBsQH/AkIBQwF1AwYBCBAAAz8BbAF8AWABUQH/AWUCXgHiBAABWgJYAb0BgAFh
        AVEB/wNiAeEEAAFlAl4B4gNMAZCoAAMGAQcBGgFuAaAB/wGJAe0B/gH/ATEBwAH2Af8BfwHqAf4B/wFA
        AZcBuwH/A0gBhAMOARIDBAEFBAEMAANGAX0BfgFiAVQB/wFlAl4B4gQAAWMCXQHfAYMBYwFUAf8DYgHh
        BAADDAEQA0kBiANEAXsDAwEEmAADEgEXAUMCRAF3ARoBbgGgAf8BiQHvAf4B/wExAcAB9gH/ATEBwAH2
        Af8BiwHnAfQB/wFHAW4BcAH1A0kBiAMjATMDCgENAwIBAwwAA0cCgQFlAVcB/wNiAeEEAAFmAmAB4AGF
        AWcBWAH/A2IB4QQAAWUCYAHjAX4BXwFRAf8BVgJUAasDAgEDkAADJwE5AV4CagHtAU8BqAHGAf8BagHO
        AeEB/wF/Ae8B/gH/ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/AYgB4AHuAf8BUwGtAcoB/wFNAW8BgQH3
        AzMBUAMJAQwQAANIAYQBhQFpAVsB/wNiAeEEAAFmAmAB4AGJAWoBWgH/A2IB4QQAAWUCYAHjAYABYwFT
        Af8BVQJTAaoDAgEDjAABWQJcAb4BaAHKAd0B/wF6Ae8B/gH/ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/
        ATEBwAH2Af8BMQHAAfYB/wExAcAB9gH/AXgB7wH+Af8BZwHJAd0B/wFZAVsBXAHBAw4BEgQCEAADPAFm
        A0EBcAMMAQ8EAANiAeEBigFsAV4B/wFmAmAB4AQAAWMCWwHkAYMBZQFWAf8DTAGQBAKIAAFFAWMBdQH2
        AYwB8AH7Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHYAf0B/wF2AdgB/QH/AXYB2AH9Af8BdgHY
        Af0B/wF2AdgB/QH/AYsB7AH3Af8BXAJnAeoDDwEUBAIYAANJAYUBZQJeAeIEAANiAeEBjAFvAV8B/wJR
        AVABnQQAAWMBXQFbAeQBhQFnAVkB/wNJAYaEAAMGAQgBGgFvAaAB/wGKAfIB/gH/AXYB2AH9Af8BdgHY
        Af0B/wFuAdIB5AH/ATIBhwGwAf8BMgGIAbAB/wFuAdIB5AH/AXYB2AH9Af8BdgHYAf0B/wGLAe4B+QH/
        AVcBZQFwAfEDDwEUBAIYAANJAYUBjQFxAWMB/wNiAeEEAANSAaMDGAEgBAADNgFYAYYBagFbAf8BdwJc
        AfiEAAMGAQgBGgFvAaAB/wGKAfIB/gH/AXYB2AH9Af8BdgHYAf0B/wEpAX4BqQH/A0UBfANEAXgBJgF7
        AacB/wF2AdgB/QH/AXYB2AH9Af8BiwHtAfkB/wFYAmcB7wMOARIEAhgAAwUBBgJXAVYBsgGOAXIBZAH/
        A2IB4QgAAxYBHgFlAl4B3QGKAW4BYAH/A1UBrIgAAUcBagFvAfUBjAHwAfsB/wF2AdgB/QH/AXYB2AH9
        Af8BZwHIAd0B/wEyAYABhQH+ATIBgAGGAf4BZwHIAd0B/wF2AdgB/QH/AXYB2AH9Af8BdAHiAfEB/wFd
        AmMB3wMJAQwEARwAAwUBBgNWAbABjwF0AWYB/wFmAmAB4AMxAU4BYQFcAVsB3gGNAXEBYwH/AVoCWAG3
        AwYBCIgAA1UBrQFPAagBxgH/AXIB3QHtAf8BmwHvAfkB/wGiAfIB+gH/AacB9AH6Af8BpwH0AfoB/wGi
        AfIB+gH/AZsB7wH5Af8BcAHaAesB/wFGAZ4BvwH/AU4CTwGXAwIBAyQAAwQBBQJWAVUBrgGPAXQBZwH/
        AYsBcQFjAf8BjwF0AWYB/wFaAlgBtwMGAQiMAAMNAREDTQGSA14B0gFfAmYB5QFeAmoB7QFXAWoBcQHy
        AVcBagFxAfIBYAFqAWwB6wFfAmYB5QNdAcwDSQGFAwkBCywAAwMBBAJPAU4BlwFuAloB9QJUAVIBqAMG
        AQeIAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB4AEHAQABAQQAAfgBBwGA
        Af8EAAHgAQcBAAF/BAAB8AEHAQwBPwQAAfABBwESAT8EAAHwAQ8BEQE/BAAB8AEDAYgBhwQAAeABAQHE
        AUMEAAHAAQEB4gEhBAABwAEAAfEBEAQAAcABAAH8AYgEAAGAAQAB/AFIBAABgAEAAfwBMAQAAcABAAH+
        BQABwAEBAf8BAQQAAcABAwH/AYMEAAs=
</value>
  </data>
</root>
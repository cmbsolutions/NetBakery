<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="find" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAAxJJREFUOE91kGtIU2EYxzte0U9BRB8U+lhBIH4pCaLQUrd5K03DS2igaZKXOWdp
        3nb1hiKIGFSmGIqY98h5O5tOzUyblVOnTqdOGeHUOXVu7n16z2hLiQ783uv//3+f55wBABscfslVDq+4
        opBXPFDAEe4UcoukmAZ8TjupO4ltgUVZ2GTCADYhvrDMRM3UPr9QADi0nSsodT5pprAM+CKFMvOwqam7
        b/GTbOGzaGZVOvBzeaS1VzxfXFZpKOAIAFf3kcsvcToVgI1emP3SiqqD3m9z4w3fN4ZfzenFr5eMZLPK
        SIrVB+KJRfVYeWX1wZ+QpFMBeQX8BqrEFhGpaJzRDJUvmMkiBZBVS4isW0FklxqRMq2ZlM0vT2Et1c5K
        1os8whbAYueoMrNyoF++MlK7bDplbl1HZN8mIqe2kGRz3ywRlpTvs9jZwGQ9d7EFxD9JhrQMtkGq0krq
        VMhmbsNmUoOGp7Xoi1KHprYOzZM8YcmeRZ/O8rQFhD+MWsXApHp7qH0DkfU4hHpZokHSRR2Saw1oY+cI
        1nRHaOZZKvOQ0maw2OcSEpMtbZxhBAS/pwcEQX1L5/zXLTPZg0vu30Ti2R0k0xnhl+EYdHtGpJLJFbOU
        jhEYshYek2Rvq4BGD/Tz82dAUEioaVq5Pja3ayZnttHwxj6S602g0RvRqnJdMxv9KO6I0tFCovkPEgR/
        fyI14Itaa0jjh4559bZ+dO8I/dDqDxWiQYkyKibWYqbfi4X7mZ2GMHZHTXLRgIMtwJ8W4IwF7yiRlbjH
        8Yf4HFn3geGJEJ7ZBtVdq8CsHIfI7J63zPIRe0uAFSz09fWjV+O25Hh9jGc1nRHcfYcW8TQ0pQXKmpXQ
        NLILQwoTpJdJITKzs/JUAAWdEUSEhUXYcbh8VxaL7ejjG2jnfvGys3eYQJQqFEPd4Ba0TeihZXQbQpOa
        9v4JsMLlCYiXufnEzdv+xAW3S04Oji5u3sGc4TT+ILwRaSAprwdu3GXWWMT4O49x/w8eBGHnRRDELcLO
        PsjzesyET0Du8RWP4E4X17PXfgON6nxLWPmgbgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="git_diff_icon_175166" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAIcdAACHHQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAQAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAHgAA
        AGYAAACAAAAAZgAAAB8AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAYAAAAIQAAAB+AAAAfwAAAH4AAACEAAAAYAAAAAMAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AHkAAAD5AAAA/wAAAP4AAAD/AAAA+QAAAHkAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAGQAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAPwAAAD/AAAAYAAAAAAAAAAEAAAAAwAA
        AAAAAAB7AAAA/wAAAPsAAAD+AAAA/wAAAP4AAAD7AAAA/wAAAHsAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAZAAAAP8AAAD8AAAA/AAAAPsAAAD7AAAA9gAAAP8AAACAAAAAAAAA
        AAYAAAAAAAAAIAAAAPQAAAD+AAAA/wAAAMUAAAB8AAAAxgAAAP8AAAD+AAAA9AAAACAAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAXgAAAH4AAADrAAAA/wAAAP0AAAD7AAAA/wAA
        AH8AAAAAAAAACAAAAAAAAABjAAAA/wAAAP8AAADGAAAAAwAAAAAAAAADAAAAxgAAAP8AAAD/AAAAYwAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAhgAAAP8AAAD7AAAA/wAA
        APsAAAD/AAAAgAAAAAAAAAAIAAAAAAAAAHwAAAD/AAAA/wAAAIYAAAAAAAAAEgAAAAAAAACGAAAA/wAA
        AP8AAAB8AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAJwAAAD/AAAA+wAA
        APsAAADqAAAA/AAAAP8AAAB/AAAAAAAAAAgAAAAAAAAAYwAAAP8AAAD/AAAAxgAAAAMAAAAAAAAAAwAA
        AMYAAAD/AAAA/wAAAGMAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAB/AAAA/wAA
        APYAAAD/AAAAhwAAAHwAAAD/AAAA/wAAAIAAAAAAAAAABgAAAAAAAAAgAAAA9AAAAP4AAAD/AAAAxQAA
        AHwAAADFAAAA/wAAAP4AAAD0AAAAIAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAALgAA
        APoAAAD7AAAA/wAAAJ0AAAAAAAAAYQAAAP8AAAD/AAAAYAAAAAAAAAAEAAAAAwAAAAAAAAB7AAAA/wAA
        APsAAAD+AAAA/wAAAP4AAAD7AAAA/wAAAHsAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAACRAAAA/wAAAP8AAAC8AAAAAAAAAAIAAAADAAAAZAAAAGUAAAACAAAAAAAAAAAAAAAAAAAAAQAA
        AAAAAAB6AAAA+gAAAP0AAAD5AAAA/QAAAPoAAAB6AAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAANAAAAD/AAAA/wAAAEYAAAAAAAAABAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAAAAAAAtAAAA9AAAAP8AAAD0AAAALQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAOAAAA6AAAAP8AAADxAAAAGQAAAAAAAAABAAAAAAAAAAQAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAABEAAADsAAAA/wAAAOwAAAARAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAABEAAADsAAAA/wAAAO0AAAASAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEwAAAO0AAAD/AAAA7QAAABMAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAEwAAAO0AAAD/AAAA7QAAABMAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAASAAAA7QAAAP8AAADsAAAAEQAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAARAAAA7AAAAP8AAADsAAAAEQAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAABAAAAAAAAABkAAADxAAAA/wAA
        AOgAAAAOAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAC0AAAD0AAAA/wAA
        APQAAAAtAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAQAAAAAAAAARgAA
        AP8AAAD/AAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAB5AAAA+QAA
        AP0AAAD5AAAA/QAAAPkAAAB5AAAAAAAAAAEAAAAAAAAAAAAAAAAAAAACAAAAZAAAAGQAAAADAAAAAgAA
        AAAAAAC8AAAA/wAAAP8AAACRAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAewAA
        AP8AAAD7AAAA/gAAAP8AAAD+AAAA+wAAAP8AAAB7AAAAAAAAAAMAAAAEAAAAAAAAAGAAAAD/AAAA/wAA
        AGEAAAAAAAAAnQAAAP8AAAD7AAAA+gAAAC4AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ACAAAAD0AAAA/gAAAP8AAADFAAAAfAAAAMUAAAD/AAAA/gAAAPQAAAAgAAAAAAAAAAYAAAAAAAAAgAAA
        AP8AAAD/AAAAfAAAAIYAAAD/AAAA9gAAAP8AAAB/AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAZAAAAP8AAAD/AAAAxgAAAAMAAAAAAAAAAwAAAMYAAAD/AAAA/wAAAGMAAAAAAAAACAAA
        AAAAAAB+AAAA/wAAAPwAAADqAAAA+wAAAPsAAAD/AAAAnAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAAB8AAAA/wAAAP8AAACGAAAAAAAAABIAAAAAAAAAhgAAAP8AAAD/AAAAewAA
        AAAAAAAIAAAAAAAAAH8AAAD/AAAA+wAAAP8AAAD7AAAA/wAAAIYAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGMAAAD/AAAA/wAAAMYAAAADAAAAAAAAAAMAAADGAAAA/wAA
        AP8AAABjAAAAAAAAAAgAAAAAAAAAfgAAAP8AAAD7AAAA/QAAAP8AAADrAAAAfgAAAF4AAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAIAAAAPQAAAD+AAAA/wAAAMUAAAB8AAAAxQAA
        AP8AAAD+AAAA9AAAACAAAAAAAAAABgAAAAAAAACAAAAA/wAAAPYAAAD7AAAA+wAAAPwAAAD8AAAA/wAA
        AGQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAewAAAP8AAAD7AAAA/gAA
        AP8AAAD+AAAA+wAAAP8AAAB7AAAAAAAAAAMAAAAEAAAAAAAAAGAAAAD/AAAA/AAAAP8AAAD/AAAA/wAA
        APwAAAD/AAAAZAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAeQAA
        APkAAAD/AAAA/gAAAP8AAAD5AAAAeQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAwAAAGAAAACEAAAAfgAA
        AH8AAAB+AAAAhAAAAGAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAHwAAAGYAAACAAAAAZgAAAB8AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAABAAAAAQAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////5BP6AJFF+nykEvoAiAj6AJAE+gCgAvoAoIL0gKFC8QCggvIA
        oALkEJAE5CCICOwgpBLoIJQV6C/kE8gn9BeoKQQXSCUENxARBCcgCQgnQAUAT0EFAI9ChQEvQQUAX0AF
        AF8gCQBfEBEAX0glPl+iiQBfyCf///////8=
</value>
  </data>
  <data name="replace" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAdxJREFUOE9jUHad8kMtcOZ/tYAZ/9X8ZvxQsOmbpuQyieX///8MyHj27NnH0MVA
        mEEtcMZ/GYPOdKBGRXnznjrNmHn/Fax6g5AVgTQ3NjYCmaiaQZhB1W/afxmjTj8QR9a0K1wjYuZ/OYse
        MB+EYZpxGqDsPfG/glPfIwXnvscqAZP+y5h07pWz72ECSSJrRsbI3mFQ8Oj5L63X2iVj1p4ka925RNG3
        77+MWVsyTAG6C4BAD8YG82Vd2v9L6rXAnSxj3/ZOxqZ1M4wPwshhAAQSKAZIOzT+l9BsLJE0aLCQ1Gus
        lnZr/C9l3FQPUwDDyM5GMUDCrO6HhG3tfzC2rHslYdjQK2nWwA5TgA3PZmdhnsbGAg4nrApw4QmszBbz
        OVj3b+Jm/7ORm/1XPyvLIrgksrOQnQvDfazM+tu42b/NYWfd2cnC7NvGwuTdzcocBFcAMgAUQDA2uiHT
        2ViWL+ZgvTqHnYUVWRzOgBqgB2OjG7KInfXhRFbmSTA+DMMZsKhCxzBDFrCzPgaGAW4DkDG6ZhCeysqy
        YS4by/VpLMwoMQRnIGN0zSDczcxsvpqN9ccUFuZDbUxMiS1MTElNTEzxKBphGF0zDHcwMzkADTgwl5Xl
        wywWludtTEwTAdAjYLY3qtAyAAAAAElFTkSuQmCC
</value>
  </data>
</root>
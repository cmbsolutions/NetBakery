<#@ template language="VB" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Netbakery.infoSchema" #>
Imports System.Collections.Generic

Namespace Models
    Public Partial Class <#= _t.singleName #>
<#  If _t.foreignKeys.Any() Then #>
        Public Sub New()
<#      For Each fk in  _t.foreignKeys #>
            <#= fk.propertyAlias #> = New List(Of <#= p.Singularize(fk.name) #>)()
<#      Next #>
        End Sub
<#  End If #>

<#  For each c in _t.columns #>
<#      If c.isNullable And c.vbType <> GetType(System.String) Then #>
        Public Property <#= c.alias #>() as <#= c.vbType #>?
<#      else #>
        Public Property <#= c.alias #>() as <#= c.vbType #>
<#      end if

        If c.mysqlType = "enum" AndAlso c.vbType <> GetType(System.String) Then
            _i = 1
 #>

        Enum <#= c.vbType #>
<#          For Each e in c.enums #>
            <#= e #> = <#= _i #>
<#              _i += 1 #>
<#          Next #>
        End Enum

<#      End If
    Next

    For Each r in _t.relations
#>
        Public Property <#= r.alias #>() As <#= p.Singularize(r.toTable.name) #>
<#
    Next
    
    For Each fk in  _t.foreignKeys
 #>
        Public Property <#= fk.propertyAlias #>() As ICollection(Of <#= p.Singularize(fk.name) #>)
<#  Next #>
    End Class
End Namespace